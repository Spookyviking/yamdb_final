name: Yamdb-workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r api_yamdb/requirements.txt 
      - name: Test with flake8
        run: |
          python -m flake8
      - name: Test django project
        run: |
          pytest
  build_and_push_to_docker_hub:
    name: Push Docker image api_yamdb to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: api_yamdb/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api_yamdb:latest
      
      - name: Send message if build_and_push_to_docker_hub failed
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ошибка при сборке/отправке образа на DockerHub  - ${{ github.repository }}
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - name: copy deploy files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          overwrite: true
          source: './nginx_deploy.conf, ./docker-compose.yaml, ./.env'
          target: 'app'
          - name: deploy project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ~/app
            sudo docker-compose pull web
            sudo docker-compose down
            sudo docker-compose up --build -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Repository: yamdb_final
            ${{ github.workflow }} успешно развернут!